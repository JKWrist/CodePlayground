

''' 定义函数的格式 def 函数名(): '''
# 函数头部要以 def 关键字开头
# 函数名要遵循变量的命名规则, 全部小写, 并且每两个单词间用_分隔
# 小括号中定义参数, 哪怕没有参数也必须要写小括号
# 最后不要忘记以冒号结尾
# def say_hi(): 这行代码叫做函数头
def say_hi():
    # 函数内如果想暂时留空, 要使用 pass 占位
    # 函数头以下, 并且属于函数内的代码, 叫做函数体
    pass

''' 定义函数时, 函数体内的代码用来实现函数的功能 '''
def say_hello():
    # 函数体内的代码都要进行缩进
    # 当函数被调用时, 才会执行函数体内的代码
    print("Hello!")
    # 当函数被调用时, 函数体内的代码也是从上往下依次执行
    print("Hello, again!")

''' 函数调用一定要放在函数定义之后 '''
# 如果是自定义函数, 要先定义, 再调用
# say_hi() 函数的定义在最上边, 这里是调用
say_hi()
# 当然, 系统提供给我们的函数可以随时使用
print("print 是系统提供给我们的函数")
# 调用函数时, 会依次执行函数体内的代码
# 那么这里调用了 say_hello() 就相当于依次执行了下面两行代码
# print("Hello!")
# print("Hello, again!")
say_hello()

# 如果函数调用放在函数定义之前会出问题的哟
oh_no()
# 这里是 oh_no() 函数的定义
def oh_no():
    print("No~o~o~o~")

# 在我们定义函数体时, 也可以调用我们定义的其它函数
def func():
    print("func")
    oh_no()
    # 此时, 我们也可以使用下边定义的函数 func_2
    # 因为目前还在函数体内, 调用函数没有限制
    func_2()

# 但是不能在这个位置调用 func 函数
# 因为 func 函数中调用了 func_2 函数, 但此时 func_2 函数尚未定义
func()  # 这样写会报错哟!

def func_2():
    print("func_2")

# 所以一般都会把函数定义的代码放在上边, 调用的代码放在下边
func()  # 此时这样写就不会报错啦

''' 为什么使用函数 '''
# 使用函数可以提高代码的复用率, 避免重复代码
# 可以整理和优化代码, 使代码保持简洁
# 使用函数也是将问题分解的过程, 将程序功能拆分细化, 使代码更容易编写
